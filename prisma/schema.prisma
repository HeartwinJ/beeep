// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Doctor {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  dob            DateTime
  gender         String
  specialization String
  email          String        @unique
  password       String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  appointments   Appointment[]
  diagnoses      Diagnosis[]

  @@map("doctors")
}

model Patient {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  dob          DateTime
  gender       String
  mobileNum    Int
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  recordings   Recording[]
  appointments Appointment[]
  diagnoses    Diagnosis[]

  @@map("patients")
}

model Recording {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  patientId String   @db.ObjectId
  url       String
  patient   Patient  @relation(fields: [patientId], references: [id])
  createdAt DateTime @default(now())

  @@map("recordings")
}

model Appointment {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  docId     String     @db.ObjectId
  patientId String     @db.ObjectId
  startTime DateTime
  endTime   DateTime
  status    String
  title     String
  doctor    Doctor     @relation(fields: [docId], references: [id])
  patient   Patient    @relation(fields: [patientId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  diagnosis Diagnosis?

  @@map("appointments")
}

model Diagnosis {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  docId         String      @db.ObjectId
  patientId     String      @db.ObjectId
  appointmentId String      @unique @db.ObjectId
  symptoms      String
  prescription  String
  findings      String
  ailment       String
  doctor        Doctor      @relation(fields: [docId], references: [id])
  patient       Patient     @relation(fields: [patientId], references: [id])
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("diagnoses")
}
